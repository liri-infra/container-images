#!/usr/bin/env python3

# SPDX-FileCopyrightText: 2020 Pier Luigi Fiorini <pierluigi.fiorini@liri.io>
#
# SPDX-License-Identifier: GPL-3.0-or-later

import json
import os
import requests
import subprocess
import sys

def debug(message):
    # https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-a-debug-message
    print(f'::debug::{message}')


def issue_message(what, message, filename=None, line=None, col=None):
    optional = []
    if filename:
        optional.append(f'file={filename}')
    if line:
        optional.append(f'line={line}')
    if col:
        optional.append(f'col={col}')
    if optional:
        middle = ' ' + ','.join(optional)
    else:
        middle = ''
    print(f'::{what}{middle}::{message}')


def warning(message, **kwargs):
    # https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-a-warning-message
    issue_message('warning', message, **kwargs)


def error(message, **kwargs):
    # https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-error-message
    issue_message('error', message, **kwargs)


def list_files_pr(number):
    # https://developer.github.com/v3/pulls/#list-pull-requests-files
    github_repository = os.environ['GITHUB_REPOSITORY']
    url = f'https://api.github.com/repos/{github_repository}/pulls/{number}/files'
    files = requests.get(url).json() or []
    filenames = []
    for entry in files:
        filenames.append(entry['filename'])
    return filenames


def list_files_push(sha):
    return subprocess.check_output(['git', 'diff-tree', '--no-commit-id', '--name-only', '-r', sha]).decode().strip().split('\n')


def main():
    """
    Detects if the push or pull request affects the files of the
    container image passed as argument and it's used by the workflow
    to know if a particular container image needs to be rebuilt.

    The following exit codes are supported:
      - 0: the image needs to be rebuilt
      - 1: the image doesn't need to be rebuilt
    """
    if len(sys.argv) != 2:
        raise SystemExit('Usage: was-it-changed [image name]')

    github_workspace = os.environ['GITHUB_WORKSPACE']
    github_event_path = os.environ['GITHUB_EVENT_PATH']

    image_name = sys.argv[1]

    payload = json.load(open(github_event_path, 'r'))

    os.chdir(github_workspace)

    if 'pull_request' in payload:
        filenames = list_files_pr(payload['pull_request']['number'])
    else:
        filenames = list_files_push(os.environ['GITHUB_SHA'])

    for filename in filenames:
        if filename.startswith(image_name):
            debug(f'{image_name} was changed')
            return 0

    warning(f'{image_name} was not changed')
    return 1


if __name__ == '__main__':
    sys.exit(main())
